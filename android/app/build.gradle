ext.kotlin_version = '1.8.10' // or a newer version if needed

plugins {
    id "com.android.application"
    id "kotlin-android"
    id "com.google.gms.google-services" // Google Services plugin
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

def firebase_cpp_sdk_dir = localProperties.getProperty("firebase_cpp_sdk_dir")
if (firebase_cpp_sdk_dir == null) {
    firebase_cpp_sdk_dir = "$rootDir/../firebase_cpp_sdk"
}

android {
    namespace = "com.example.research_app"
    compileSdk = 35
    ndkVersion = "23.1.7779620"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.example.research_app"
        minSdk = 21
        targetSdk = 35
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        applicationId "com.aditya_mukherjee.sophrodom"
        resValue "string", "app_name", "Sophrodom"
        externalNativeBuild {
            cmake {
                arguments "-DFIREBASE_CPP_SDK_DIR=$firebase_cpp_sdk_dir"
            }
        }
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:28.4.1')
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-database'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

apply plugin: 'com.google.gms.google-services' // Apply the Google Services plugin
